odroidgoa-uboot-config

################################ uboot flow ref #################################
# Uboot loads env AFTER board setup, meaning the logo and logo dtb path was hardcoded
# so before dtb gets loaded, i've added this
#
# if load mmc 1:1 ${loadaddr} logo.env; then; 
#     env import -t ${loadaddr} ${filesize}; 
# fi

# Example env file contents: (note the trailing slash)
# PanelPathSlash="ScreenFiles/Panel 4/" 

# I've also added a variable before the dtb name, without a slash. 
# if the var is not populated, and logo.env is not present,
# uboot behaves as expected. However, if PanelPathSlash is populated,
# uboot will load from that path. allowing for panel dtb for the logo to be set in uboot
#
# setenv dtb_name \"${PanelPathSlash}rg351mp-kernel.dtb\"", 0);

# Then, bootcmd will try to load PanCho.ini (this script) before boot.ini

####################################################################################
########### ALL OTHER ENV SHOULD BE PERSISTED USING THE saveenv COMMAND ############
### FAT OVERWRITES ARE UNSTABLE IN UBOOT THIS DOES THE LEAST AMOUNT OF FATWRITES ###
####################################################################################


#     Hold R1 to set panel, Set panel via buttons
#     U         =   New Panel 1
#     R         =   New Panel 2
#     D         =   New Panel 3
#     L         =   New Panel 4
#     X(north)  =   New Panel 5 (changes kernel)
#     A(east)   =   Original Panel
#     B(south)  =   RGB20S
#     Y(west)   =   Custom

# # # # # # # # # # # # # # # # # # # # 
#  _________________________________  #
# |                                 | #
# |                                 | #
# |                                 | #
# |                                 | #
# |                                 | #
# |                                 | #
# |                                 | #
# |                                 | #
# |_________________________________| #
#                                     #
#         1                5          #
#         ▲               (X)         #
#     4 ◄   ► 2   Custom(Y) (A)Orig   #
#         ▼               (B)         #
#         3              RGB20S       #
#         _                _          #
#       /   \            /   \        #
#      |     |          |     |       #
#       \ _ /            \ _ /        #
#                                     #
# # # # # # # # # # # # # # # # # # # # 

# Functions
setenv SaveLogoEnv 'fatsize mmc 1:1 logo.env; env export -t 0x00800800 PanelPathSlash; fatwrite mmc 1:1 0x00800800 logo.env ${filesize}'
setenv EnvSave "saveenv; run SaveLogoEnv"

# Init vars but dont save until a panel is chosen
if env exist PanChoInitialized
then
    echo PanCho Previously initialized...
else
    setenv PanelNum 4
    setenv PanelPath "ScreenFiles/Panel ${PanelNum}"
    setenv PanelPathSlash "ScreenFiles/Panel ${PanelNum}/"
    setenv PanelSettingIsPermanent false
    setenv PanChoInitialized true
fi

# Re-init decision-making var
setenv RunPanCho false

if ${PanelSettingIsPermanent}
then
    echo "Panel Setting Is Permanent... skipping PanCho"
else
    # if pressing R1...
    if gpio input c7
    then
        # ...and pressing Vol-
        if gpio input c1
        then
            # Disable Panel Chooser
            setenv PanelSettingIsPermanent true
            run EnvSave
        else
            # RunPanCho 
            setenv RunPanCho true
        fi
    fi
fi

if ${RunPanCho}
then
#     gpio ref
#     U = b12
#     R = b15
#     D = b13
#     L = b14
#     X(north) = b7
#     A(east) = b2
#     B(south) = b5
#     Y(west) = b6

    if gpio input b12
    then
        # Up
        setenv Panel "1"
        setenv PanelPath "ScreenFiles/Panel ${Panel}"
        setenv PanelPathSlash "ScreenFiles/Panel ${Panel}/"
        run EnvSave
        sleep 3
        poweroff
        
    elif gpio input b15
    then
        # Right
        setenv Panel "2"
        setenv PanelPath "ScreenFiles/Panel ${Panel}"
        setenv PanelPathSlash "ScreenFiles/Panel ${Panel}/"
        run EnvSave
        sleep 3
        poweroff
        
    elif gpio input b13
    then
        # Down
        setenv Panel "3"
        setenv PanelPath "ScreenFiles/Panel ${Panel}"
        setenv PanelPathSlash "ScreenFiles/Panel ${Panel}/"
        run EnvSave
        sleep 3
        poweroff
        
    elif gpio input b14
    then
        # Left
        setenv Panel "4"
        setenv PanelPath "ScreenFiles/Panel ${Panel}"
        setenv PanelPathSlash "ScreenFiles/Panel ${Panel}/"
        run EnvSave
        sleep 3
        poweroff
        
    elif gpio input b7
    then
        # X (north)
        setenv Panel "5"
        setenv PanelPath "ScreenFiles/Panel ${Panel}"
        setenv PanelPathSlash "ScreenFiles/Panel ${Panel}/"
        run EnvSave
        sleep 3
        poweroff
        
    elif gpio input b2
    then
        # A (east)
        setenv Panel "0"
        setenv PanelPath "ScreenFiles/Panel ${Panel}"
        setenv PanelPathSlash "ScreenFiles/Panel ${Panel}/"
        run EnvSave
        sleep 3
        poweroff
    
    elif gpio input b5
    then
        # B (South)
        setenv Panel "RGB20S"
        setenv PanelPath "ScreenFiles/Panel ${Panel}"
        setenv PanelPathSlash "ScreenFiles/Panel ${Panel}/"
        run EnvSave
        sleep 3
        poweroff

    # elif gpio input b6
    # then
    #     #Y (west)
    #     setenv Panel "Custom"
    #     setenv PanelPath "ScreenFiles/Panel ${Panel}"
    #     setenv PanelPathSlash "ScreenFiles/Panel ${Panel}/"
    #     run EnvSave
    #     sleep 3
    #     poweroff
        
    else
        echo "no button, no set"
    fi
fi

echo "\${Panel} is ${Panel}"
echo "\${PanelPath} is ${PanelPath}"
echo "\${PanelPathSlash} is ${PanelPathSlash}"
echo "\${PanelSettingIsPermanent} is ${PanelSettingIsPermanent}"
echo "...and those vars should be persistant"
